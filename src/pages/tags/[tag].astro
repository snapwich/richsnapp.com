---
import { getCollection } from "astro:content";
import BasicPage from "layouts/BasicPage.astro";
import { parseSlugDate } from "utils/date";
import PostPreviewList from "components/PostPreviewList.astro";

export async function getStaticPaths() {
  const blogPosts = await getCollection("blog");
  const articlePosts = await getCollection("article");
  type Post = (typeof blogPosts)[number] | (typeof articlePosts)[number];
  const combinedPosts = [...blogPosts, ...articlePosts].sort(
    (a, b) =>
      parseSlugDate(b.id).date.valueOf() - parseSlugDate(a.id).date.valueOf(),
  );
  const postsGroupedByTag = combinedPosts.reduce(
    (memo, post) => {
      post.data.tags.forEach((tag) => {
        if (!memo[tag]) {
          memo[tag] = [] as Post[];
        }
        memo[tag].push(post);
      });
      return memo;
    },
    {} as Record<string, Post[]>,
  );

  let posts = Object.entries(postsGroupedByTag).map(([tag, posts]) => {
    return {
      params: {
        tag,
      },
      props: {
        posts,
      },
    };
  });
  return posts;
}
const posts = Astro.props.posts;
const { tag } = Astro.params;
---

<BasicPage title={tag}>
  <PostPreviewList posts={posts} />
</BasicPage>
