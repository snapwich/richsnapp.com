---
import { unified } from "unified";
import remarkParse from "remark-parse";
import remarkRehype from "remark-rehype";
import rehypeExternalLinks from "rehype-external-links";
import rehypeStringify from "rehype-stringify";
import * as cheerio from "cheerio";
import Tags from "./Tags.astro";
import { parseSlugDate } from "../utils/date";
import { Picture } from "astro:assets";
import type { ImageMetadata } from "astro";
import imgCover from "./assets/cover.jpg";

export interface Props {
  posts: Array<{
    collection: string;
    id: string;
    body?: string;
    data: {
      title: string;
      tags: string[];
      image?: ImageMetadata;
      imageSmall?: ImageMetadata | null;
    };
  }>;
}

async function markdownToHtml(markdown: string) {
  const result = await unified()
    .use(remarkParse)
    .use(remarkRehype)
    .use(rehypeExternalLinks, { target: "_blank", rel: ["noopener"] })
    .use(rehypeStringify)
    .process(markdown);
  return result.toString();
}

function getFirstParagraph(htmlContent: string) {
  const $ = cheerio.load(htmlContent);
  const paragraphs = $("p").filter((i, el) => {
    return !$(el).text().trim().startsWith("import");
  });
  return paragraphs.first().html();
}

const { posts } = Astro.props;
---

<>
  {
    posts.map(async (post) => {
      const { slug, year, formattedDate } = parseSlugDate(post.id);
      const path = `/${post.collection}/${year}/${slug}`;
      return post.body ? (
        <article class="page-preview">
          <header>
            <div class="cover-image">
              {(post.data.imageSmall || post.data.imageSmall === null) && (
                <div class="sm">
                  <Picture
                    src={post.data.imageSmall ? post.data.imageSmall : imgCover}
                    alt={post.data.title}
                    width="800"
                  />
                </div>
              )}
              <div class="lg">
                <Picture
                  src={post.data.image ? post.data.image : imgCover}
                  alt={post.data.title}
                  height="400"
                />
              </div>
            </div>
            <div class="header-info">
              <div class="date">{formattedDate}</div>
            </div>
            <h2>
              <a href={path}>{post.data.title}</a>
            </h2>
          </header>
          <p set:html={getFirstParagraph(await markdownToHtml(post.body))} />
          <footer>
            <Tags tags={post.data.tags} />
            <p>
              <a href={path}>Read more â†’</a>
            </p>
          </footer>
        </article>
      ) : null;
    })
  }
</>

<style lang="less">
  @import "../styles/variables.less";
  @import (reference) "../styles/site.less";

  a {
    .no-underline();
  }

  .page-preview {
    position: relative;
    margin-bottom: 2em;
    @media (max-width: @screen-sm-max) {
      margin-bottom: 4em;
    }
    &:first-child {
      margin-top: 1em;
    }
    header {
      h2 {
        font-size: 40px;
      }
    }

    footer {
      display: flex;
      color: @gray-light;
      font-size: 1.1em;
      font-family: @font-family-sans-serif;
      font-weight: 300;
      p {
        margin-left: auto;
        padding-left: 20px;
        text-align: right;
        text-indent: 0;
        white-space: nowrap;
      }
    }

    .header-info {
      display: flex;
      justify-content: space-evenly;
      font-size: 1.4em;
      text-align: center;
      @media (min-width: @screen-md-min) {
        margin-bottom: -20px;
      }
      font-family: @font-family-sans-serif;
      font-weight: 300;
      & > div {
        color: @gray-light;
        text-indent: 0;
        flex: 1 1 auto;
      }
      .date {
        white-space: nowrap;
        @media (max-width: @screen-sm-max) {
          -webkit-text-stroke: 1px black;
          color: white;
          font-weight: 900;
          font-size: 1.25em;
        }
      }
    }

    .cover-image {
      overflow: hidden;
      & > div {
        height: 100%;
      }
      img {
        height: 100%;
        width: auto;
        object-fit: cover;
      }
      .sm {
        display: none;
      }
      @media (max-width: @screen-sm-max) {
        .sm + .lg {
          display: none;
        }
        .sm {
          display: inline;
        }
      }
    }

    @media (max-width: @screen-sm-max) {
      .cover-image {
        height: 150px;
        margin-bottom: -60px;
        margin-left: -1 * (@grid-gutter-width / 2);
        margin-right: -1 * (@grid-gutter-width / 2);
        img {
          width: 100%;
        }
      }
    }

    @media (min-width: @screen-md-min) {
      .cover-image {
        position: absolute;
        top: 58px;
        right: calc(100% + 15px);
        width: 200px;
        height: 200px;
        border-style: solid;
        border-color: @gray-lighter;
        border-width: 0 1px 0 0;
        &::after {
          content: "";
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          pointer-events: none;
          background: radial-gradient(
            circle at top right,
            rgba(255, 255, 255, 0) 40%,
            rgba(255, 255, 255, 0.9) 65%,
            rgba(255, 255, 255, 0.97) 68%,
            rgba(255, 255, 255, 1) 70%
          );
        }
      }
    }
  }
</style>
